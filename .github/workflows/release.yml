name: "publish"

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v4
      - name: get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.VERSION}`,
              name: `v${process.env.VERSION}`,
              draft: false,
              prerelease: false
            })
            return data.id
      - name: Wait for GitHub release to be ready
        run: sleep 10

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "ubuntu-24.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Add Rust target (macOS only)
        if: matrix.platform == 'macos-latest'
        run: rustup target add ${{ matrix.args == '--target x86_64-apple-darwin' && 'x86_64-apple-darwin' || 'aarch64-apple-darwin' }}

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: install frontend dependencies
        run: pnpm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.args }}
